// Disable warnings generated by the Bullet codebase
#if defined(__clang__)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wsign-conversion"
#pragma clang diagnostic ignored "-Wold-style-cast"
#pragma clang diagnostic ignored "-Wdouble-promotion"
#pragma clang diagnostic ignored "-Wimplicit-float-conversion"
#pragma clang diagnostic ignored "-Wcast-align"
#endif

#include <loco/backends/bullet/common_bullet.hpp>

namespace loco {
namespace bullet {

auto vec3_to_bt(const Vec3& vec) -> btVector3 {
    // NOLINTNEXTLINE
    return btVector3(vec.x(), vec.y(), vec.z());
}

auto mat3_to_bt(const Mat3& mat) -> btMatrix3x3 {
    // clang-format off
    // NOLINTNEXTLINE
    return btMatrix3x3(mat(0, 0), mat(0, 1), mat(0, 2),
                       mat(1, 0), mat(1, 1), mat(1, 2),
                       mat(2, 0), mat(2, 1), mat(2, 2));
    // clang-format on
}

auto quat_to_bt(const Quat& quat) -> btQuaternion {
    // NOLINTNEXTLINE
    return btQuaternion(quat.x(), quat.y(), quat.z(), quat.w());
}

auto mat4_to_bt(const Mat4& mat) -> btTransform {
    // clang-format off
    Mat3 rot(mat(0, 0), mat(0, 1), mat(0, 2),
             mat(1, 0), mat(1, 1), mat(1, 2),
             mat(2, 0), mat(2, 1), mat(2, 2));
    Vec3 pos(mat(0, 3), mat(1, 3), mat(2, 3));
    // clang-format on

    // NOLINTNEXTLINE
    return btTransform(mat3_to_bt(rot), vec3_to_bt(pos));
}

}  // namespace bullet
}  // namespace loco

#if defined(__clang__)
#pragma clang diagnostic pop  // NOLINT
#endif
